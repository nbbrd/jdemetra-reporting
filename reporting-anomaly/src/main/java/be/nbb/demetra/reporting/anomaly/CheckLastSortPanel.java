/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package be.nbb.demetra.reporting.anomaly;

import java.awt.event.ItemEvent;

/**
 *
 * @author maggima
 */
public class CheckLastSortPanel extends javax.swing.JPanel {

    /**
     * Creates new form CheckLastSortPanel
     */
    public CheckLastSortPanel() {
        initComponents();
    }

    public AnomalyPojoComparator getComparator() {
        if (ascendingRadio.isSelected()) {
            switch (sortComboBox.getSelectedIndex()) {
                case 1:
                    return AnomalyPojoComparator.Relative_Asc;
                case 2:
                    return AnomalyPojoComparator.Absolute_Asc;
                case 3:
                    return AnomalyPojoComparator.Period_Asc;
                default:
                    return null;
            }
        } else {
            switch (sortComboBox.getSelectedIndex()) {
                case 1:
                    return AnomalyPojoComparator.Relative_Desc;
                case 2:
                    return AnomalyPojoComparator.Absolute_Desc;
                case 3:
                    return AnomalyPojoComparator.Period_Desc;
                default:
                    return null;
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        orderButtonGroup = new javax.swing.ButtonGroup();
        ascendingRadio = new javax.swing.JRadioButton();
        descendingRadio = new javax.swing.JRadioButton();
        sortComboBox = new javax.swing.JComboBox();

        orderButtonGroup.add(ascendingRadio);
        org.openide.awt.Mnemonics.setLocalizedText(ascendingRadio, org.openide.util.NbBundle.getMessage(CheckLastSortPanel.class, "CheckLastSortPanel.ascendingRadio.text")); // NOI18N
        ascendingRadio.setEnabled(false);

        orderButtonGroup.add(descendingRadio);
        descendingRadio.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(descendingRadio, org.openide.util.NbBundle.getMessage(CheckLastSortPanel.class, "CheckLastSortPanel.descendingRadio.text")); // NOI18N
        descendingRadio.setEnabled(false);

        sortComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "Relative Error", "Absolute Error", "Period" }));
        sortComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sortComboBoxItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ascendingRadio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(descendingRadio)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(sortComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(sortComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ascendingRadio)
                    .addComponent(descendingRadio)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void sortComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sortComboBoxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            ascendingRadio.setEnabled(sortComboBox.getSelectedIndex() != 0);
            descendingRadio.setEnabled(sortComboBox.getSelectedIndex() != 0);
        }
    }//GEN-LAST:event_sortComboBoxItemStateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton ascendingRadio;
    private javax.swing.JRadioButton descendingRadio;
    private javax.swing.ButtonGroup orderButtonGroup;
    private javax.swing.JComboBox sortComboBox;
    // End of variables declaration//GEN-END:variables
}
